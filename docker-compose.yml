networks:
    back: ~

volumes:
    db-data: ~

services:
    mysql:
        image: mysql:${DATABASE_SERVER_VERSION:-lts}
        networks:
            - back
        volumes:
            - db-data:/var/lib/mysql
        environment:
            MYSQL_ROOT_PASSWORD: ${DATABASE_ROOT_PASSWORD}
            MYSQL_DATABASE: ${DATABASE_NAME}
            MYSQL_DATABASE_TEST: ${DATABASE_NAME}_test
            MYSQL_USER: ${DATABASE_USER}
            MYSQL_PASSWORD: ${DATABASE_PASSWORD}
        security_opt: #fix mbind not permitted in container
            - seccomp:unconfined
        healthcheck:
            test: "mysql --user=root --password=${DATABASE_ROOT_PASSWORD} --execute \"SHOW DATABASES;\""
            interval: 3s
            timeout: 1s
            retries: 5

    nginx:
        image: nginx:latest
        networks:
            - back
        links:
            - api
        volumes:
            - ./.infra/docker/nginx:/etc/nginx/conf.d:delegated
            - .:/app:delegated
        working_dir: /app
        ports:
            - 8666:80
        environment:
            NGINX_SERVERNAME: ${APP_DOMAIN}
            NGINX_ROOTDIR: /app/public
        command: /bin/bash -c "envsubst '$$NGINX_SERVERNAME $$NGINX_ROOTDIR' < /etc/nginx/conf.d/beer.template > /etc/nginx/conf.d/default.conf && nginx -g 'daemon off;'"

    api:
        build:
            dockerfile: .infra/docker/php/Dockerfile
            context: .
            target: api
        networks:
            - back
        working_dir: /app
        volumes:
            - .:/app
        env_file: .env
        depends_on:
            mysql: { condition: service_healthy }

    php:
        build:
            dockerfile: .infra/docker/php/Dockerfile
            context: .
            target: cli
        networks:
            - back
        working_dir: /app
        volumes:
            - .:/app
        env_file: .env
        deploy:
            replicas: 0
